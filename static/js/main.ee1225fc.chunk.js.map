{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Toast/Toast.module.css","components/Loader/Loader.module.css","components/Filter/Filter.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-operations.js","components/Toast/Toast.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Loader/Loader.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","loading","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","contacts","phonebookReducer","devTools","process","getAllContacts","getFilter","selectors","getLoading","getVisibleContacts","createSelector","contact","name","toLowerCase","includes","axios","defaults","baseURL","operations","fetchContacts","dispatch","get","then","data","catch","error","addContact","number","post","deleteContact","contactId","delete","Toast","message","createPortal","className","s","container","document","querySelector","ContactForm","haveError","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","find","item","showToast","onAddContact","prev","errorMessage","setTimeout","this","CSSTransition","in","timeout","classNames","unmountOnExit","onSubmit","form","label","input","type","onChange","button","Component","connect","phonebookSelectors","phone","phonebookOperations","onChangeFilter","length","onDeleteContact","TransitionGroup","component","list","map","appear","listItem","onClick","Loading","wrapper","inner","color","height","width","App","isLoading","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ee1225fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__17Uv9\",\"label\":\"ContactForm_label__3kfas\",\"input\":\"ContactForm_input__20CzJ\",\"button\":\"ContactForm_button__3qyVQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1-pzg\",\"listItem\":\"ContactList_listItem__1LOQ9\",\"button\":\"ContactList_button__swizY\",\"appear\":\"ContactList_appear__TVPNi\",\"appearActive\":\"ContactList_appearActive__2UTiS\",\"enter\":\"ContactList_enter__1yjU4\",\"enterActive\":\"ContactList_enterActive__3Fl92\",\"exit\":\"ContactList_exit__2L0tD\",\"exitActive\":\"ContactList_exitActive__1_1h9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Toast_container__3i3Q6\",\"message\":\"Toast_message__1SWdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__kzV_A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__5lc47\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'phonebook/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'phonebook/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('phonebook/fetchContactsError');\n\nexport const addContactRequest = createAction('phonebook/addContactRequest');\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\nexport const addContactError = createAction('phonebook/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'phonebook/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'phonebook/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('phonebook/deleteContactError');\n\nexport const changeFilter = createAction('phonebook/changeFilter');\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  changeFilter,\n  addContactSuccess,\n  deleteContactSuccess,\n  fetchContactsSuccess,\n  addContactRequest,\n  deleteContactRequest,\n  fetchContactsRequest,\n  addContactError,\n  deleteContactError,\n  fetchContactsError,\n} from './phonebook-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import phonebookReducer from './phonebook/phonebook-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nconst middleware = [...getDefaultMiddleware()];\n\nconst store = configureStore({\n  reducer: {\n    contacts: phonebookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contacts.loading;\nconst getAllContacts = state => {\n  return state.contacts.items;\n};\nconst getFilter = state => state.contacts.filter;\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  },\n);\n\nconst selectors = { getLoading, getAllContacts, getFilter, getVisibleContacts };\n\nexport default selectors;\n","import axios from 'axios';\nimport {\n  addContactSuccess,\n  deleteContactSuccess,\n  fetchContactsSuccess,\n  addContactRequest,\n  deleteContactRequest,\n  fetchContactsRequest,\n  addContactError,\n  deleteContactError,\n  fetchContactsError,\n} from './phonebook-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nconst addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nconst operations = { fetchContacts, addContact, deleteContact };\n\nexport default operations;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Toast.module.css';\nimport { createPortal } from 'react-dom';\n\nfunction Toast({ message }) {\n  return createPortal(\n    <div className={s.container}>\n      <p className={s.message}>{message}</p>\n    </div>,\n    document.querySelector('#toast'),\n  );\n}\n\nToast.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Toast;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\nimport Toast from '../Toast/Toast';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors';\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    haveError: false,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n\n    if (name === '' || number === '') {\n      this.showToast(\"Name or number can't be empty string\");\n\n      return;\n    }\n\n    if (this.props.contacts.find(item => item.name === name)) {\n      this.showToast(`${name} is already in contacts`);\n      this.setState({ name: '', number: '' });\n      return;\n    }\n\n    this.props.onAddContact(name, number);\n\n    this.setState({ name: '', number: '' });\n  };\n\n  showToast = message => {\n    this.setState(prev => ({\n      haveError: !prev.haveError,\n      errorMessage: message,\n    }));\n    setTimeout(() => {\n      this.setState(prev => ({\n        haveError: !prev.haveError,\n      }));\n    }, 1500);\n  };\n\n  render() {\n    const { errorMessage, haveError } = this.state;\n\n    return (\n      <>\n        <CSSTransition\n          in={haveError}\n          timeout={250}\n          classNames=\"toast\"\n          unmountOnExit\n        >\n          <Toast message={errorMessage} />\n        </CSSTransition>\n\n        <form onSubmit={this.handleSubmit} className={s.form}>\n          <label className={s.label}>\n            Name\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className={s.label}>\n            Number\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button type=\"submit\" className={s.button}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: phonebookSelectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: (name, phone) =>\n    dispatch(phonebookOperations.addContact(name, phone)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors';\n\nfunction Filter({ value = '', onChangeFilter, items }) {\n  return (\n    <CSSTransition\n      in={items.length > 0}\n      timeout={500}\n      classNames=\"filter\"\n      unmountOnExit\n    >\n      <div>\n        <h3>Find contact by name</h3>\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          onChange={onChangeFilter}\n        />\n      </div>\n    </CSSTransition>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: phonebookSelectors.getFilter(state),\n  items: phonebookSelectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <TransitionGroup component=\"ul\" className={s.list}>\n      {contacts.length === 0 ? (\n        <CSSTransition\n          key={1}\n          timeout={700}\n          classNames=\"message-empty\"\n          unmountOnExit\n        >\n          <li>Contact list empty for now</li>\n        </CSSTransition>\n      ) : (\n        contacts.map(({ name, number, id }) => {\n          return (\n            <CSSTransition key={id} appear={true} timeout={250} classNames={s}>\n              <li className={s.listItem}>\n                <span>\n                  {name}: {number}\n                </span>\n                <button\n                  type=\"button\"\n                  className={s.button}\n                  onClick={() => onDeleteContact(id)}\n                >\n                  Delete contact\n                </button>\n              </li>\n            </CSSTransition>\n          );\n        })\n      )}\n    </TransitionGroup>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.number,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: phonebookSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(phonebookOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Loader.module.css';\nimport { createPortal } from 'react-dom';\n\nfunction Loading(props) {\n  return createPortal(\n    <div className={s.wrapper}>\n      <div className={s.inner}>\n        <Loader type=\"ThreeDots\" color=\"#27dad4\" height={100} width={100} />\n      </div>\n    </div>,\n    document.querySelector('#toast'),\n  );\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport phonebookSelectors from './redux/phonebook/phonebook-selectors';\nimport phonebookOperations from './redux/phonebook/phonebook-operations';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport { CSSTransition } from 'react-transition-group';\nimport Loader from './components/Loader/Loader';\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.props.isLoading && <Loader />}\n\n        <div className=\"Container\">\n          <CSSTransition\n            in={true}\n            appear={true}\n            timeout={500}\n            classNames=\"title\"\n            unmountOnExit\n          >\n            <h1>Phonebook</h1>\n          </CSSTransition>\n\n          <ContactForm />\n\n          <h1>Contacts</h1>\n\n          <Filter />\n\n          <ContactList />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: phonebookSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(phonebookOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}